INFO 08-02 14:50:08 [__init__.py:235] Automatically detected platform cuda.
INFO 08-02 14:50:11 [api_server.py:1755] vLLM API server version 0.10.0
INFO 08-02 14:50:11 [cli_args.py:261] non-default args: {'model_tag': 'Salesforce/xLAM-2-32b-fc-r', 'enable_auto_tool_choice': True, 'tool_call_parser': 'xlam', 'model': 'Salesforce/xLAM-2-32b-fc-r', 'tensor_parallel_size': 2}
INFO 08-02 14:50:20 [config.py:1604] Using max model len 131072
INFO 08-02 14:50:20 [config.py:2434] Chunked prefill is enabled with max_num_batched_tokens=8192.
INFO 08-02 14:50:26 [__init__.py:235] Automatically detected platform cuda.
INFO 08-02 14:50:29 [core.py:572] Waiting for init message from front-end.
INFO 08-02 14:50:29 [core.py:71] Initializing a V1 LLM engine (v0.10.0) with config: model='Salesforce/xLAM-2-32b-fc-r', speculative_config=None, tokenizer='Salesforce/xLAM-2-32b-fc-r', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=Salesforce/xLAM-2-32b-fc-r, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
WARNING 08-02 14:50:29 [multiproc_worker_utils.py:307] Reducing Torch parallelism from 32 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 08-02 14:50:29 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_ac1c0828'), local_subscribe_addr='ipc:///tmp/f3bfd4ef-2a28-4dd7-8183-486d73f2de0a', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-02 14:50:33 [__init__.py:235] Automatically detected platform cuda.
INFO 08-02 14:50:34 [__init__.py:235] Automatically detected platform cuda.
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:36 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_1f3bfa79'), local_subscribe_addr='ipc:///tmp/797cb331-b499-4e21-a09b-3e810f2b773a', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:38 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_662d08ee'), local_subscribe_addr='ipc:///tmp/60a43c28-3bda-4535-96ca-2f226c101961', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [__init__.py:1375] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [__init__.py:1375] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ii/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/ii/.cache/vllm/gpu_p2p_access_cache_for_0,1,2.json
[1;36m(VllmWorker rank=0 pid=426372)[0;0m WARNING 08-02 14:50:40 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorker rank=1 pid=426373)[0;0m WARNING 08-02 14:50:40 [custom_all_reduce.py:147] Custom allreduce is disabled because your platform lacks GPU P2P capability or P2P test failed. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_be9711ac'), local_subscribe_addr='ipc:///tmp/3e9ce41a-5be2-4e0f-b275-b522e2bc8f57', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [parallel_state.py:1102] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [parallel_state.py:1102] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(VllmWorker rank=0 pid=426372)[0;0m WARNING 08-02 14:50:40 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=1 pid=426373)[0;0m WARNING 08-02 14:50:40 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [gpu_model_runner.py:1843] Starting to load model Salesforce/xLAM-2-32b-fc-r...
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:40 [gpu_model_runner.py:1843] Starting to load model Salesforce/xLAM-2-32b-fc-r...
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:40 [gpu_model_runner.py:1875] Loading model from scratch...
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:41 [cuda.py:290] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:41 [gpu_model_runner.py:1875] Loading model from scratch...
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:41 [cuda.py:290] Using Flash Attention backend on V1 engine.
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:41 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:41 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/14 [00:00<?, ?it/s]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:   7% Completed | 1/14 [00:00<00:12,  1.00it/s]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  14% Completed | 2/14 [00:02<00:12,  1.06s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  21% Completed | 3/14 [00:03<00:11,  1.08s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  29% Completed | 4/14 [00:04<00:11,  1.12s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  36% Completed | 5/14 [00:05<00:10,  1.12s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  43% Completed | 6/14 [00:06<00:09,  1.15s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  50% Completed | 7/14 [00:07<00:08,  1.16s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  57% Completed | 8/14 [00:09<00:07,  1.18s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  64% Completed | 9/14 [00:10<00:05,  1.16s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  71% Completed | 10/14 [00:11<00:04,  1.08s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  79% Completed | 11/14 [00:12<00:03,  1.11s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  86% Completed | 12/14 [00:13<00:02,  1.12s/it]
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:56 [default_loader.py:262] Loading weights took 14.73 seconds
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards:  93% Completed | 13/14 [00:14<00:01,  1.12s/it]
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:50:57 [gpu_model_runner.py:1892] Model loading took 30.7284 GiB and 15.909137 seconds
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards: 100% Completed | 14/14 [00:15<00:00,  1.09it/s]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Loading safetensors checkpoint shards: 100% Completed | 14/14 [00:15<00:00,  1.07s/it]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m 
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:57 [default_loader.py:262] Loading weights took 15.10 seconds
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:50:58 [gpu_model_runner.py:1892] Model loading took 30.7284 GiB and 16.432148 seconds
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:51:12 [backends.py:530] Using cache directory: /home/ii/.cache/vllm/torch_compile_cache/fc7ef3a707/rank_1_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:51:12 [backends.py:541] Dynamo bytecode transform time: 14.23 s
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:51:13 [backends.py:530] Using cache directory: /home/ii/.cache/vllm/torch_compile_cache/fc7ef3a707/rank_0_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:51:13 [backends.py:541] Dynamo bytecode transform time: 14.52 s
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:51:17 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:51:17 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:52:11 [backends.py:215] Compiling a graph for dynamic shape takes 57.56 s
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:52:11 [backends.py:215] Compiling a graph for dynamic shape takes 57.24 s
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:52:39 [monitor.py:34] torch.compile takes 71.76 s in total
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:52:39 [monitor.py:34] torch.compile takes 71.79 s in total
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:52:42 [gpu_worker.py:255] Available KV cache memory: 34.83 GiB
[1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:52:42 [gpu_worker.py:255] Available KV cache memory: 34.83 GiB
INFO 08-02 14:52:43 [kv_cache_utils.py:833] GPU KV cache size: 285,360 tokens
INFO 08-02 14:52:43 [kv_cache_utils.py:837] Maximum concurrency for 131,072 tokens per request: 2.18x
INFO 08-02 14:52:43 [kv_cache_utils.py:833] GPU KV cache size: 285,360 tokens
INFO 08-02 14:52:43 [kv_cache_utils.py:837] Maximum concurrency for 131,072 tokens per request: 2.18x
[1;36m(VllmWorker rank=0 pid=426372)[0;0m Capturing CUDA graph shapes:   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graph shapes:   1%|▏         | 1/67 [00:01<01:07,  1.02s/it]Capturing CUDA graph shapes:   3%|▎         | 2/67 [00:01<00:56,  1.14it/s]Capturing CUDA graph shapes:   4%|▍         | 3/67 [00:02<00:52,  1.22it/s]Capturing CUDA graph shapes:   6%|▌         | 4/67 [00:03<00:49,  1.26it/s]Capturing CUDA graph shapes:   7%|▋         | 5/67 [00:04<00:48,  1.29it/s]Capturing CUDA graph shapes:   9%|▉         | 6/67 [00:04<00:46,  1.31it/s]Capturing CUDA graph shapes:  10%|█         | 7/67 [00:05<00:44,  1.34it/s]Capturing CUDA graph shapes:  12%|█▏        | 8/67 [00:06<00:43,  1.36it/s]Capturing CUDA graph shapes:  13%|█▎        | 9/67 [00:06<00:42,  1.38it/s]Capturing CUDA graph shapes:  15%|█▍        | 10/67 [00:07<00:40,  1.40it/s]Capturing CUDA graph shapes:  16%|█▋        | 11/67 [00:08<00:39,  1.42it/s]Capturing CUDA graph shapes:  18%|█▊        | 12/67 [00:08<00:38,  1.44it/s]Capturing CUDA graph shapes:  19%|█▉        | 13/67 [00:09<00:36,  1.46it/s]Capturing CUDA graph shapes:  21%|██        | 14/67 [00:10<00:35,  1.48it/s]Capturing CUDA graph shapes:  22%|██▏       | 15/67 [00:10<00:34,  1.50it/s]Capturing CUDA graph shapes:  24%|██▍       | 16/67 [00:11<00:33,  1.53it/s]Capturing CUDA graph shapes:  25%|██▌       | 17/67 [00:12<00:32,  1.56it/s]Capturing CUDA graph shapes:  27%|██▋       | 18/67 [00:12<00:30,  1.59it/s]Capturing CUDA graph shapes:  28%|██▊       | 19/67 [00:13<00:29,  1.61it/s]Capturing CUDA graph shapes:  30%|██▉       | 20/67 [00:13<00:28,  1.64it/s]Capturing CUDA graph shapes:  31%|███▏      | 21/67 [00:14<00:27,  1.67it/s]Capturing CUDA graph shapes:  33%|███▎      | 22/67 [00:15<00:26,  1.70it/s]Capturing CUDA graph shapes:  34%|███▍      | 23/67 [00:15<00:25,  1.73it/s]Capturing CUDA graph shapes:  36%|███▌      | 24/67 [00:16<00:24,  1.77it/s]Capturing CUDA graph shapes:  37%|███▋      | 25/67 [00:16<00:23,  1.80it/s]Capturing CUDA graph shapes:  39%|███▉      | 26/67 [00:17<00:22,  1.84it/s]Capturing CUDA graph shapes:  40%|████      | 27/67 [00:17<00:21,  1.87it/s]Capturing CUDA graph shapes:  42%|████▏     | 28/67 [00:18<00:20,  1.91it/s]Capturing CUDA graph shapes:  43%|████▎     | 29/67 [00:18<00:19,  1.94it/s]Capturing CUDA graph shapes:  45%|████▍     | 30/67 [00:19<00:18,  1.98it/s]Capturing CUDA graph shapes:  46%|████▋     | 31/67 [00:19<00:17,  2.02it/s]Capturing CUDA graph shapes:  48%|████▊     | 32/67 [00:20<00:16,  2.06it/s]Capturing CUDA graph shapes:  49%|████▉     | 33/67 [00:20<00:16,  2.12it/s]Capturing CUDA graph shapes:  51%|█████     | 34/67 [00:21<00:15,  2.18it/s]Capturing CUDA graph shapes:  52%|█████▏    | 35/67 [00:21<00:14,  2.23it/s]Capturing CUDA graph shapes:  54%|█████▎    | 36/67 [00:21<00:13,  2.29it/s]Capturing CUDA graph shapes:  55%|█████▌    | 37/67 [00:22<00:12,  2.36it/s]Capturing CUDA graph shapes:  57%|█████▋    | 38/67 [00:22<00:11,  2.42it/s]Capturing CUDA graph shapes:  58%|█████▊    | 39/67 [00:23<00:11,  2.47it/s]Capturing CUDA graph shapes:  60%|█████▉    | 40/67 [00:23<00:10,  2.53it/s]Capturing CUDA graph shapes:  61%|██████    | 41/67 [00:23<00:10,  2.59it/s]Capturing CUDA graph shapes:  63%|██████▎   | 42/67 [00:24<00:09,  2.66it/s]Capturing CUDA graph shapes:  64%|██████▍   | 43/67 [00:24<00:08,  2.75it/s]Capturing CUDA graph shapes:  66%|██████▌   | 44/67 [00:24<00:08,  2.82it/s]Capturing CUDA graph shapes:  67%|██████▋   | 45/67 [00:25<00:07,  2.90it/s]Capturing CUDA graph shapes:  69%|██████▊   | 46/67 [00:25<00:07,  2.99it/s]Capturing CUDA graph shapes:  70%|███████   | 47/67 [00:25<00:06,  3.08it/s]Capturing CUDA graph shapes:  72%|███████▏  | 48/67 [00:26<00:06,  3.15it/s]Capturing CUDA graph shapes:  73%|███████▎  | 49/67 [00:26<00:05,  3.28it/s]Capturing CUDA graph shapes:  75%|███████▍  | 50/67 [00:26<00:04,  3.41it/s]Capturing CUDA graph shapes:  76%|███████▌  | 51/67 [00:26<00:04,  3.53it/s]Capturing CUDA graph shapes:  78%|███████▊  | 52/67 [00:27<00:04,  3.63it/s]Capturing CUDA graph shapes:  79%|███████▉  | 53/67 [00:27<00:03,  3.73it/s]Capturing CUDA graph shapes:  81%|████████  | 54/67 [00:27<00:03,  3.88it/s]Capturing CUDA graph shapes:  82%|████████▏ | 55/67 [00:27<00:02,  4.10it/s]Capturing CUDA graph shapes:  84%|████████▎ | 56/67 [00:27<00:02,  4.29it/s]Capturing CUDA graph shapes:  85%|████████▌ | 57/67 [00:28<00:02,  4.49it/s]Capturing CUDA graph shapes:  87%|████████▋ | 58/67 [00:28<00:01,  4.72it/s]Capturing CUDA graph shapes:  88%|████████▊ | 59/67 [00:28<00:01,  4.98it/s]Capturing CUDA graph shapes:  90%|████████▉ | 60/67 [00:28<00:01,  5.20it/s]Capturing CUDA graph shapes:  91%|█████████ | 61/67 [00:28<00:01,  5.47it/s]Capturing CUDA graph shapes:  93%|█████████▎| 62/67 [00:29<00:00,  5.69it/s]Capturing CUDA graph shapes:  94%|█████████▍| 63/67 [00:29<00:00,  6.00it/s]Capturing CUDA graph shapes:  96%|█████████▌| 64/67 [00:29<00:00,  6.44it/s]Capturing CUDA graph shapes:  97%|█████████▋| 65/67 [00:29<00:00,  6.90it/s]Capturing CUDA graph shapes:  99%|█████████▊| 66/67 [00:29<00:00,  7.19it/s][1;36m(VllmWorker rank=1 pid=426373)[0;0m INFO 08-02 14:53:13 [gpu_model_runner.py:2485] Graph capturing finished in 30 secs, took 1.38 GiB
Capturing CUDA graph shapes: 100%|██████████| 67/67 [00:29<00:00,  7.38it/s]Capturing CUDA graph shapes: 100%|██████████| 67/67 [00:29<00:00,  2.26it/s]
[1;36m(VllmWorker rank=0 pid=426372)[0;0m INFO 08-02 14:53:13 [gpu_model_runner.py:2485] Graph capturing finished in 30 secs, took 1.38 GiB
INFO 08-02 14:53:14 [core.py:193] init engine (profile, create kv cache, warmup model) took 136.45 seconds
INFO 08-02 14:53:16 [loggers.py:141] Engine 000: vllm cache_config_info with initialization after num_gpu_blocks is: 17835
WARNING 08-02 14:53:16 [config.py:1528] Default sampling parameters have been overridden by the model's Hugging Face generation config recommended from the model creator. If this is not intended, please relaunch vLLM instance with `--generation-config vllm`.
INFO 08-02 14:53:16 [serving_responses.py:89] Using default chat sampling params from model: {'repetition_penalty': 1.05, 'temperature': 0.7, 'top_k': 20, 'top_p': 0.8}
INFO 08-02 14:53:16 [serving_chat.py:84] "auto" tool choice has been enabled please note that while the parallel_tool_calls client option is preset for compatibility reasons, it will be ignored.
INFO 08-02 14:53:16 [serving_chat.py:122] Using default chat sampling params from model: {'repetition_penalty': 1.05, 'temperature': 0.7, 'top_k': 20, 'top_p': 0.8}
INFO 08-02 14:53:16 [serving_completion.py:77] Using default completion sampling params from model: {'repetition_penalty': 1.05, 'temperature': 0.7, 'top_k': 20, 'top_p': 0.8}
INFO 08-02 14:53:16 [api_server.py:1818] Starting vLLM API server 0 on http://0.0.0.0:8000
INFO 08-02 14:53:16 [launcher.py:29] Available routes are:
INFO 08-02 14:53:16 [launcher.py:37] Route: /openapi.json, Methods: HEAD, GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /docs, Methods: HEAD, GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /docs/oauth2-redirect, Methods: HEAD, GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /redoc, Methods: HEAD, GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /health, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /load, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /ping, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /ping, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /tokenize, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /detokenize, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/models, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /version, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/responses, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/responses/{response_id}, Methods: GET
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/responses/{response_id}/cancel, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/chat/completions, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/completions, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/embeddings, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /pooling, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /classify, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /score, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/score, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/audio/transcriptions, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/audio/translations, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /rerank, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v1/rerank, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /v2/rerank, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /scale_elastic_ep, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /is_scaling_elastic_ep, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /invocations, Methods: POST
INFO 08-02 14:53:16 [launcher.py:37] Route: /metrics, Methods: GET
INFO:     Started server process [426106]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
