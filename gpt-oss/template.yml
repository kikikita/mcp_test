stages:
  - pre build
  - build
  - deploy

determine build tag:
  stage: pre build
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "prod" || $CI_COMMIT_BRANCH == "stable"'
      changes:
        - services/**/*
  interruptible: true
  script:
    - export BUILDING_TIME=$(date +%d_%m_%y-time-%H_%M_%S)
    - export BUILDING_TAG_IMAGE=branch_name-$CI_COMMIT_BRANCH-$BUILDING_TIME
    - echo "BUILDING_TAG_IMAGE=$BUILDING_TAG_IMAGE" >> build.env
    - echo CURRENT BUILDING TAG IS $BUILDING_TAG_IMAGE
  artifacts:
    expire_in: "5 days"
    reports:
      dotenv: build.env

build microservice job:
  stage: build
  interruptible: true
  retry: 2
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "prod" || $CI_COMMIT_BRANCH == "stable"'
      changes:
        - services/**/*
  before_script:
    - podman login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
  script:
    - podman build -t $CI_REGISTRY_IMAGE/$SERVICE:$BUILDING_TAG_IMAGE -f services/$SERVICE/Dockerfile services/
    - podman push $CI_REGISTRY_IMAGE/$SERVICE:$BUILDING_TAG_IMAGE
  parallel:
    matrix:
      - SERVICE: ${SERVICES}

deploy microservice prod job:
  stage: deploy
  rules:
    - if: ($CI_COMMIT_BRANCH == "prod")
      changes:
        - services/**/*
  script:
    - export KUBECONFIG=$K8SCONFIG
    - |
      helm upgrade --install \
      --values helm/template/values.yaml \
      --set containerPull.imageTag="${BUILDING_TAG_IMAGE}" --debug \
      --set microservice.name=$SERVICE \
      --create-namespace --namespace glarus-prod \
      $SERVICE helm/template
  parallel:
    matrix:
      - SERVICE: ${SERVICES}

deploy microservice dev job:
  stage: deploy
  rules:
    - if: ($CI_COMMIT_BRANCH == "dev")
      changes:
        - services/**/*
  script:
    - export KUBECONFIG=$K8SCONFIG
    - |
      helm upgrade --install \
      --values helm/template/dev.yaml \
      --set containerPull.imageTag="${BUILDING_TAG_IMAGE}" --debug \
      --set microservice.name=$SERVICE \
      --create-namespace --namespace glarus-dev \
      $SERVICE helm/template
  parallel:
    matrix:
      - SERVICE: ${SERVICES}

deploy microservice stable job:
  stage: deploy
  rules:
    - if: ($CI_COMMIT_BRANCH == "stable")
      changes:
        - services/**/*
  script:
    - export KUBECONFIG=$K8SCONFIG
    - |
      helm upgrade --install \
      --values helm/template/stable.yaml \
      --set containerPull.imageTag="${BUILDING_TAG_IMAGE}" --debug \
      --set microservice.name=$SERVICE \
      --create-namespace --namespace glarus-stable \
      $SERVICE helm/template
  parallel:
    matrix:
      - SERVICE: ${SERVICES}
